#!/usr/bin/env python3

import os
import shutil
import argparse

parser = argparse.ArgumentParser(description='Moves all nested files in a specified directory into itself')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-n', '--dry-run', action='store_true',
                   help='show which files will be moved and where')
group.add_argument('-f', '--force', action='store_true',
                   help='move all files and remove directories')
parser.add_argument('dir', metavar='DIR', help='directory to be flattened')
parser.add_argument('-v', '--verbose', action='store_true',
                    help='print paths while moving')
args = parser.parse_args()

realpath = os.path.realpath(args.dir)

dirs = []
files = []

# bc the find binary is different between macOS and Linux for some reason
# please don't judge me i am a python3 newbie


def find(path):
    if os.path.isdir(path):
        for i in os.scandir(path):
            find(i.path)
        if not realpath == path:
            dirs.append(path)
    else:
        files.append(path)

find(realpath)

for path in files:
    prefix = 'Moving' if args.force else 'Will move'
    source = path
    dest = os.path.join(realpath, os.path.basename(path))
    print(f"{prefix} {source} -> {dest}")

    if args.force:
        shutil.move(source, dest)

for _dir in dirs:
    prefix = 'Deleting' if args.force else 'Will delete'
    source = path
    dest = os.path.join(realpath, os.path.basename(path))
    print(f"{prefix} {_dir}")

    if args.force:
        shutil.rmtree(_dir)
